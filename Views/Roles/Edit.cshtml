@model AdminPanelCore.Models.Role
<!-- My htmlhelper -->
@using AdminPanelCore.Helpers


@{
    ViewData["Title"] = "Edit";
}

<h2>Edit</h2>

<h4>Role</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <input asp-for="RoleId" class="form-control" type="hidden" />
                <span asp-validation-for="RoleId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="RoleName" class="control-label"></label>
                <input asp-for="RoleName" class="form-control" />
                <span asp-validation-for="RoleName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                <input asp-for="Description" class="form-control" />
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </form>
    </div>
</div>

<a asp-action="Index">Back to list</a>


@if (@Html.CheckPermission("Roles.Index.Edit.Update"))
{

    <div class="row">
        <div class="col-sm-12">
            <div class="white-box">
                <h3 class="box-title m-b-30">Assign Permissions</h3>
                <div class="row">
                    <div class="col-lg-12 col-sm-12">

                        <div style="margin-left:28px; margin-top:20px;">
                            <button type="button" class="btn">Collepsed</button>
                            <button type="button" class="btn">Expanded</button>
                            <button type="button" class="btn">Checked All</button>
                            <button type="button" class="btn">Unchek All</button>
                        </div>
                        <ul class="mytree">
                            @Html.Raw(ViewBag.menu)
                        </ul>
                        <div style="margin-left:28px">
                            <button onclick="Done()" class="btn btn-primary">Update</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <br />
    <div>
        <a asp-action="Index">Back to List</a>
    </div>


    <script>
    $(document).on('click', '.mytree label', function (e) {
        $(this).next('ul').fadeToggle();
        e.stopPropagation();
    });
        
    $(document).on('change', '.mytree input[type=checkbox]', function (e) {

        $(this).siblings('ul').find("input[type='checkbox']").prop('checked', this.checked);

        function uncheck(el) {
            let x = true;
            [...el].forEach((e) => {
                console.log(e.checked);
                if (e.checked == true) x = false;
            });
            console.log(x);
            return x;
        }

        let tt = $(this).parentsUntil(".mytree").find('ul').find("input[type='checkbox']");
        $(this).parentsUntil(".mytree").find("._main").prop('checked', this.checked ? true : !uncheck(tt));

        e.stopPropagation();
    });


    $(document).on('click', 'button', function (e) {
        switch ($(this).text()) {
            case 'Collepsed':
                $('.mytree ul').fadeOut();
                break;
            case 'Expanded':
                $('.mytree ul').fadeIn();
                break;
            case 'Checked All':
                $(".mytree input[type='checkbox']").prop('checked', true);
                break;
            case 'Unchek All':
                $(".mytree input[type='checkbox']").prop('checked', false);
                break;
            default:
        }
    });

    function Done() {
        var checkedValues = $('input:checkbox:checked').map(function () {
            return this.id;

        }).get();

        console.log(checkedValues);
        $body = $("body");
        $(document).on({
            ajaxStart: function () { $body.addClass("loading"); },
            ajaxStop: function () { }
        });
        $.ajax({
            type: "POST",
            url: '@Url.Action("Update", "Roles")',
            data: {
                id: @Model.RoleId,
                roles: checkedValues
            },
            error: function (result) {
                alert("error");
            },
            success: function (result) {
                $body.removeClass("loading");
                if (result.status == true) {
                    alert("Successfully Updated Role!")
                    var baseUrl = "/Roles";
                    window.location.href = baseUrl;
                }
                else {
                    alert("Failed:"+result);
                }
            }
        });
    }
    </script>

}







